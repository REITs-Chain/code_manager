<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ww.dao.WalletaddressMapper">
  <resultMap id="WalletaddressMap" type="model.Walletaddress">
    <id property="id" column="id"/>
    <result property="userId" column="userId"/>
    <result property="type" column="type"/>
    <result property="address" column="address"/>
    <association property="user" column="userId" javaType="model.User" select="ww.dao.UserMapper.getById"/>
  </resultMap>
  <select id="getById" parameterType="java.lang.Integer" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m where m.id=#{value}</select>
  <select id="getByUserId" parameterType="java.lang.Integer" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m where m.userId=#{value}</select>
  <select id="getByType" parameterType="java.lang.Integer" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m where m.type=#{value}</select>
  <select id="getByAddress" parameterType="java.lang.String" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m where m.address=#{value}</select>
  <select id="getAll" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m</select>
  <select id="getList" parameterType="String" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m ${value}</select>
  <select id="getList2" resultType="model.Walletaddress" resultMap="WalletaddressMap">select m.* from t_walletaddress m where ${param1} order by ${param2} limit ${param3},${param4}</select>
  <select id="selectSql" parameterType="String" resultType="ww.common.SqlMap">${value}</select>
  <select id="getCount" parameterType="String" resultType="int">select count(*) from t_walletaddress m ${value}</select>
  <insert id="insert" parameterType="model.Walletaddress" keyProperty="id" useGeneratedKeys="true">insert into t_walletaddress(userId,type,address) values(#{userId},#{type},#{address})</insert>
  <update id="update" parameterType="model.Walletaddress" keyProperty="id" useGeneratedKeys="true">update t_walletaddress set userId=#{userId},type=#{type},address=#{address} where id=#{id}</update>
  <delete id="delete" parameterType="java.lang.Integer">delete from t_walletaddress where id=#{value}</delete>
  <delete id="deleteWhere" parameterType="String">delete from t_walletaddress ${value}</delete>
</mapper>
